import Head from 'next/head';
import { useEffect, useState } from "react";
import Pusher from "pusher-js";


export default function Home() {
  const [username, setUsername] = useState("");
  const [messages, setMessages] = useState([]);
  const [message, setMessage] = useState("");

  let allMessages = [];

  useEffect(() => {
    Pusher.logToConsole = false;

    const pusher = new Pusher('key', {
      cluster: 'cluster_name'
    });

    const channel = pusher.subscribe('chat');
    channel.bind('message', (data) => {
      allMessages.push(data);
      setMessages(allMessages);
    });
  });

  const submit = async (e) => {
    e.preventDefault();

    await fetch("endpoint", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        username,
        message
      })
    });

    setMessage("");
  };

  return (
    <div className="container">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossOrigin="anonymous" />
      </Head>
      <div className="d-flex flex-column align-items-stretch flex-shrink-0 bg-white" style={{ width: "380px" }}>
        <div className="d-flex align-items-center flex-shrink-0 p-3 link-dark text-decoration-none border-bottom">
          <input className="fs-5 fw-semibold" type="text" value={username} placeholder="Username" onChange={(e) => setUsername(e.target.value)} />
        </div>

        <div className="list-group list-group-flush border-bottom scrollarea" style={{ minHeight: "500px" }}>
          {messages.map((message, index) => (
            <div key={index} className="list-group-item list-group-item-action py-3 lh-tight" aria-current="true">
              <div className="d-flex w-100 align-items-center justify-content-between">
                <strong className="mb-1">{message.username}</strong>
              </div>
              <div className="col-10 mb-1 small">{message.message}</div>
            </div>
          ))}
        </div>
      </div >
      <form onSubmit={submit}>
        <input className="form-control" type="text" placeholder="Write a message" value={message} onChange={(e) => setMessage(e.target.value)} />
      </form>
    </div>
  );
}
